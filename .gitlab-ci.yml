variables:
   PROJECT: ./Fizz.SalesOrder.sln
   PROJECT_NAME: FIZZ_SALES_ORDER
   IMAGE_PREFIX: fizz
   IMAGE_NAME: order
   REGISTRY_HOST: hub.iubang.com:5000

stages:
  - build_src
  - build_img
  - push_image

build_src:
  stage: build_src
  tags:
    - dotnet
  only:
    - fizzDev
    - dev
    - master
  variables:
    PUBLISH_DIR: publish-$CI_PIPELINE_ID
  script:
    - mkdir -p $PWD/$PUBLISH_DIR
    - echo $PWD/$PUBLISH_DIR
    - dotnet publish -v q $PROJECT -c Release -o $PWD/$PUBLISH_DIR --version-suffix 1.0
    - cp -r tools/CI/Dockerfile $PUBLISH_DIR
    - tar -cz -f $PROJECT_NAME.tar.gz -C $PUBLISH_DIR .
  artifacts:
    name: "$PROJECT_NAME"
    paths:
      - $PROJECT_NAME.tar.gz

build_image:
  stage: build_img
  tags:
    - docker
  only:
    - fizzDev
    - dev
    - master
  variables:
    IMAGE_TAG: nightly
    DOCKER_BUILD_DIR: docker_build_$CI_PIPELINE_ID
  script:
    - mkdir -p $DOCKER_BUILD_DIR
    - IMAGE_FULL_NAME=$IMAGE_PREFIX/$IMAGE_NAME:$IMAGE_TAG
    - tar -xzf $PROJECT_NAME.tar.gz -C $DOCKER_BUILD_DIR
    - docker build --tag $IMAGE_FULL_NAME $DOCKER_BUILD_DIR
  dependencies:
    - build_src

push_image:
  stage: push_image
  tags:
    - docker
  only:
    - fizzDev
    - master
    - dev
  variables:
    IMAGE_TAG: nightly
    LATEST: 'false'
    PUSH_VERSION: $CI_PIPELINE_ID
    IMAGE_FULL_NAME: $IMAGE_PREFIX/$IMAGE_NAME
    CURRENT_PUSH_IMAGE_NAME: $REGISTRY_HOST/$IMAGE_PREFIX/$IMAGE_NAME:$IMAGE_TAG
  script:
    - echo "$CURRENT_PUSH_IMAGE_NAME"
    - docker image tag $IMAGE_FULL_NAME $CURRENT_PUSH_IMAGE_NAME
    - docker image push $CURRENT_PUSH_IMAGE_NAME > /dev/null
    - docker image rm $CURRENT_PUSH_IMAGE_NAME
    - CURRENT_PUSH_IMAGE_NAME=$CURRENT_PUSH_IMAGE_NAME-$CI_PIPELINE_ID
    - docker image tag $IMAGE_FULL_NAME $CURRENT_PUSH_IMAGE_NAME
    - docker image push $CURRENT_PUSH_IMAGE_NAME > /dev/null
    - docker image rm $CURRENT_PUSH_IMAGE_NAME
